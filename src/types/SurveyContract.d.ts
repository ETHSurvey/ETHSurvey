/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from 'bn.js';
import { Contract, ContractOptions, EventOptions } from 'web3-eth-contract';
import { EventLog } from 'web3-core';
import { EventEmitter } from 'events';
import { Callback, TransactionObject, ContractEvent } from './types';

export class SurveyContract extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    UserSurveys(arg0: string, arg1: number | string): TransactionObject<string>;

    survey_indices(arg0: number | string): TransactionObject<string>;

    Surveys(
      arg0: string | number[]
    ): TransactionObject<{
      amount: BN;
      requiredResponses: BN;
      admin: string;
      creationTime: BN;
      expirationTime: BN;
      name: string;
      shortid: string;
      tokenAddress: string;
      remainingAmount: BN;
      totalResponses: BN;
      0: BN;
      1: BN;
      2: string;
      3: BN;
      4: BN;
      5: string;
      6: string;
      7: string;
      8: BN;
      9: BN;
    }>;

    surveyInfo(
      _shortid: string
    ): TransactionObject<{
      0: string;
      1: BN;
      2: BN;
      3: BN;
    }>;

    getAllSurveys(): TransactionObject<{
      0: (string)[];
      1: (string)[];
      2: (BN)[];
    }>;

    getUserSurveys(
      _admin: string
    ): TransactionObject<{
      0: (string)[];
      1: (string)[];
      2: (BN)[];
    }>;

    createSurvey(
      _name: string,
      _shortid: string,
      _amount: number | string,
      _requiredResponses: number | string,
      _tokenAddress: string,
      _expirationTime: number | string
    ): TransactionObject<boolean>;

    submitSurveyResponse(_shortid: string): TransactionObject<boolean>;

    numSurveys(): TransactionObject<BN>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
