/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from 'web3-eth-contract';
import { Block } from 'web3-eth';
import { EventLog } from 'web3-core';
import { EventEmitter } from 'events';
import { Callback, TransactionObject } from './types';

export class SurveyContract extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  methods: {
    survey_indices(arg0: number | string): TransactionObject<string>;

    Surveys(
      arg0: string | number[]
    ): TransactionObject<{
      amount: string;
      requiredResponses: string;
      admin: string;
      creationTime: string;
      expirationTime: string;
      name: string;
      shortid: string;
      tokenAddress: string;
      remainingAmount: string;
      totalResponses: string;
      0: string;
      1: string;
      2: string;
      3: string;
      4: string;
      5: string;
      6: string;
      7: string;
      8: string;
      9: string;
    }>;

    surveyInfo(
      _shortid: string
    ): TransactionObject<{
      0: string;
      1: string;
      2: string;
      3: string;
    }>;

    getAllSurveys(): TransactionObject<{
      0: (string)[];
      1: (string)[];
      2: (string)[];
    }>;

    getUserSurveys(
      _admin: string
    ): TransactionObject<{
      0: (string)[];
      1: (string)[];
      2: (string)[];
    }>;

    createSurvey(
      _name: string,
      _shortid: string,
      _amount: number | string,
      _requiredResponses: number | string,
      _tokenAddress: string,
      _expirationTime: number | string
    ): TransactionObject<boolean>;

    submitSurveyResponse(_shortid: string): TransactionObject<boolean>;

    numSurveys(): TransactionObject<string>;
  };
  events: {
    allEvents: (
      options?: {
        filter?: object;
        fromBlock?: number | string;
        topics?: (null | string)[];
      },
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
